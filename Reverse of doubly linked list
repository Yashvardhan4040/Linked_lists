#include<iostream>
using namespace std;
struct node{
    int data;
    node*next;
    node*prev;
    node(int x)
    {
        data=x;
        next=NULL;
        prev=NULL;
    }
};
void printlist(node*head){
    while(head!=NULL)
    {
        cout<<head->data<<" ";
        head=head->next;
    }
}
node * reverseofdoublylist(node*head)
{
    {
    node*prev = NULL; // Initialize prev to NULL
    node*curr = head;

    while(curr != NULL)
    {
        node*next = curr->next; // Save the next node
        curr->next = prev;      // Reverse the link
        curr->prev = next;      // Set the new prev (next)

        prev = curr;            // Move prev and curr pointers
        curr = next;
    }

    return prev; // The new head after reversal
}
}
int main()
{
    node*head=new node(10);
    node*temp1=new node(20);
    node*temp2=new node(30);
    head->next=temp1;
    temp1->prev=head;
    temp1->next=temp2;
    temp2->prev=temp1;
    cout<<"List before reversal: ";
    printlist(head);
    head=reverseofdoublylist(head);
    cout<<"List after reversal: ";
    printlist(head);
}

